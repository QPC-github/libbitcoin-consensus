###############################################################################
#  Copyright (c) 2014-2020 libbitcoin-consensus developers (see COPYING).
#
#         GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY
#
###############################################################################

name: Continuous Integration Build

on: [ pull_request, push, workflow_dispatch ]

jobs:
  verify-installsh:

    strategy:
      fail-fast: false

      matrix:
        include:
          - os: ubuntu-latest
            compiler: "clang"
            link: "--disable-static"
            boost: "--build-boost"
            icu: ""
            assert: "--disable-ndebug"
            cc: "clang"
            cflags: "-Os -fPIE"
            cxx: "clang++"
            cxxflags: "-Os -fPIE"
            packager: "apt"
            packages: "clang"
            coverage: "false"

          - os: ubuntu-latest
            compiler: "clang"
            link: "--disable-shared"
            boost: "--build-boost"
            icu: "--build-icu --with-icu"
            assert: ""
            cc: "clang"
            cflags: "-Os -fPIE"
            cxx: "clang++"
            cxxflags: "-Os -fPIE"
            packager: "apt"
            packages: "clang"
            coverage: "false"

          - os: ubuntu-latest
            compiler: "gcc"
            link: "--disable-static"
            boost: "--build-boost"
            icu: ""
            assert: ""
            cc: "gcc"
            cflags: "-Os -fPIE"
            cxx: "g++"
            cxxflags: "-Os -fPIE"
            packager: "apt"
            packages: "gcc"
            coverage: "false"

          - os: ubuntu-latest
            compiler: "gcc"
            link: "--disable-shared"
            boost: "--build-boost"
            icu: "--build-icu --with-icu"
            assert: ""
            cc: "gcc"
            cflags: "-Og -g --coverage -fPIE"
            cxx: "g++"
            cxxflags: "-Og -g --coverage -fPIE"
            packager: "apt"
            packages: "gcc"
            coverage: "true"

          - os: macos-latest
            compiler: "clang"
            link: "--disable-static"
            boost: ""
            icu: "--with-icu"
            assert: ""
            cc: "clang"
            cflags: "-Os -fPIE"
            cxx: "clang++"
            cxxflags: "-Os -fPIE"
            packager: "brew"
            packages: "boost icu4c"
            coverage: "false"

          - os: macos-latest
            compiler: "clang"
            link: "--disable-shared"
            boost: "--build-boost"
            icu: "--build-icu --with-icu"
            assert: ""
            cc: "clang"
            cflags: "-Os -fPIE"
            cxx: "clang++"
            cxxflags: "-Os -fPIE"
            packager: "brew"
            packages: ""
            coverage: "false"

    runs-on: ${{ matrix.os }}

    env:
      CC: ${{ matrix.cc }}
      CFLAGS: '${{ matrix.cflags }}'
      CXX: ${{ matrix.cxx }}
      CXXFLAGS: '${{ matrix.cxxflags }}'
      CI_REPOSITORY: '${{ github.repository }}'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare toolchain [apt]
        if: ${{ matrix.packager == 'apt' }}
        run: |
          sudo apt-get update
          sudo apt-get install git build-essential autoconf automake libtool pkg-config ${{ matrix.packages }}

      - name: Prepare toolchain [brew]
        if: ${{ matrix.packager == 'brew' }}
        run: |
          brew install git autoconf automake libtool pkg-config ${{ matrix.packages }}

      - name: Execute install.sh
        run: >
          ./install.sh
          ${{ matrix.link }}
          ${{ matrix.assert }}
          ${{ matrix.icu }}
          ${{ matrix.boost }}
          --build-dir=${{ github.workspace }}/build
          --prefix=${{ github.workspace }}/prefixenv

      - name: Coveralls Calculation [apt-only]
        if: ${{ (matrix.packager == 'apt') && (matrix.coverage == 'true') }}
        run: |
          sudo apt-get install lcov
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info "/usr/*" "${{ github.workspace }}/prefixenv/*" "${{ github.workspace }}/build/*" "${{ github.workspace }}/examples/*" "${{ github.workspace }}/test/*" --output-file coverage.info
          lcov --list coverage.info

      - name: Coveralls.io Upload
        if: ${{ matrix.coverage == 'true' }}
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: "./coverage.info"
          github-token: ${{ secrets.github_token }}

      - name: Display boost bootstrap.log [--build-boost]
        if: ${{ failure() && (matrix.boost == '--build-boost') }}
        run: |
          gcc -v
          clang -v
          cat ${{ github.workspace }}/build/build-*/bootstrap.log

